{"version":3,"sources":["serviceWorker.js","Firebase/firebase.js","ArtGallery/Search/Search.js","ArtGallery/Nav/Nav.js","ArtGallery/CardItem/CardItem.js","ArtGallery/Gallery/Gallery.js","ArtGallery/FloatingArrow/FloatingArrow.js","ArtGallery/ZoomCardItem/ZoomCardItem.js","ArtGallery/ArtGallery.js","App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","err","test","message","database","auth","GoogleAuthProvider","Search","props","useState","search","setSearch","useEffect","charAt","toUpperCase","slice","id","className","onSubmit","e","preventDefault","handleSearch","onChange","event","searchText","target","value","substr","toLowerCase","placeholder","onClick","console","log","Nav","recieveSearchText","useCallback","propsChild","handleNavSearch","alt","src","href","Card","currentCard","title","imgURL","date","CardItem","card","handleClickedCard","Gallery","cardItemsData","setCardItemsData","setClickedCard","recieveCardDetails","handleGalleryClickedCard","ref","once","querySnapShot","data","val","dataJSON","cardItemsList","list","values","Object","filter","i","titleFlag","indexOf","tagsFlag","tags","tag","filterCards","map","key","toString","createCardItemsList","length","FloatingArrow","ZoomCardItem","recieveTagText","childProps","handleTagSearch","tagsList","Tag","currentTag","createTagsList","ZoomImage","description","Like","Dislike","zoomIn","zoomOut","resetTransform","Fragment","likeClassName","setLikeClassName","parseInt","likes","likeCounter","setLikeCounter","updates","update","error","onAnimationEnd","dislikeClassName","setDislikeClassName","dislikeCounter","setDislikeCounter","dislikes","ArtGallery","lock","setLock","setCard","wide","setWide","windowWidth","recieveNavSearchText","recieveTagSearchText","cardId","recieveCardFromDB","undefined","App","getWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","width","height","innerWidth","innerHeight","rootElement","document","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0656163d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBbkn86NAs0iCCE6i3dMjxctS-r93_d50s\",\r\n  authDomain: \"artgallery-4c02e.firebaseapp.com\",\r\n  databaseURL: \"https://artgallery-4c02e.firebaseio.com\",\r\n  projectId: \"artgallery-4c02e\",\r\n  storageBucket: \"artgallery-4c02e.appspot.com\",\r\n  messagingSenderId: \"955387804026\",\r\n  appId: \"1:955387804026:web:d9fa5f3954d08b61983ec3\",\r\n  measurementId: \"G-E986Y4Q017\"\r\n};\r\n// Initialize Firebase\r\ntry {\r\n  firebase.initializeApp(firebaseConfig);\r\n} catch (err) {\r\n  // we skip the \"already exists\" message which is\r\n  // not an actual error when we're hot-reloading\r\n  if (!/already exists/.test(err.message)) {\r\n    //console.error(\"Firebase initialization error\", err.stack);\r\n  }\r\n}\r\n// Get a reference to the database service\r\nvar database = firebase.database();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./search.css\";\r\n\r\nexport const Search = (props) => {\r\n  const [search, setSearch] = useState(props.search);\r\n\r\n  // const [search, setSearch] = useState();\r\n\r\n  useEffect(\r\n    () => {\r\n      setSearch(props.search.charAt(0).toUpperCase() + props.search.slice(1));\r\n    },\r\n    [props.search] // Occurs when the state within is changing\r\n  );\r\n\r\n  /**\r\n   * When occrs event 'onChange' in the search input,\r\n   * update the parent props {handleSearch} with the search text.\r\n   * @param {onChange} event\r\n   */\r\n  function updateSearch(event) {\r\n    // Get the search text when occurs event 'onChange'\r\n    let searchText = event.target.value.substr(0, 30).toLowerCase();\r\n    setSearch(searchText);\r\n\r\n    // Update the parent's props {handleSearch} with the search text\r\n    props.handleSearch(searchText);\r\n  }\r\n\r\n  function deleteSearch() {\r\n    console.log(123);\r\n    // Get the search text when occurs event 'delete search'\r\n    let searchText = \"\";\r\n    setSearch(searchText);\r\n\r\n    // Update the parent's props {handleSearch} with the search text\r\n    props.handleSearch(searchText);\r\n  }\r\n\r\n  const updateSearchOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleSearch(search);\r\n  };\r\n\r\n  return (\r\n    <div id=\"searchContainer\" className=\"search-container\">\r\n      <i id=\"searchIcon\" className=\"fa fa-search search-icon\" />\r\n      <form onSubmit={updateSearchOnSubmit}>\r\n        <input\r\n          id=\"searchInput\"\r\n          className=\"search-input\"\r\n          onChange={updateSearch}\r\n          placeholder=\"Search\"\r\n          // value={props.search.charAt(0).toUpperCase() + props.search.slice(1)}\r\n          value={search}\r\n        />\r\n        {search && (\r\n          <i className=\"fas fa-times delete-icon\" onClick={deleteSearch} />\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./nav.css\";\r\nimport { Search } from \"../Search/Search\";\r\nexport const Nav = (props) => {\r\n  const [search, setSearch] = useState(props.search);\r\n  console.log(\"inside nav\", props.search);\r\n  // Recieve search data from Search component, init search state\r\n  const recieveSearchText = useCallback(\r\n    (propsChild) => {\r\n      // Update searched text in the state\r\n      setSearch(props);\r\n\r\n      // Update the parent's props {handleNavSearch} with the search text\r\n      // (ArtGallery component - Search grandparent component)\r\n      props.handleNavSearch(propsChild);\r\n    },\r\n    [] //search\r\n  );\r\n\r\n  const logo =\r\n    \"https://avatars1.githubusercontent.com/u/40990488?s=460&u=746bedd30b0b1172e701889d5bd9159465b93909&v=4\";\r\n\r\n  return (\r\n    <div id=\"navContainer\" className=\"nav-container\">\r\n      <div id=\"logoContainer\" className=\"logo-container\">\r\n        <img id=\"logoImage\" className=\"logo-image\" alt=\"logo\" src={logo} />\r\n      </div>\r\n      <Search search={props.search} handleSearch={recieveSearchText} />\r\n      <div id=\"iconsContainer\" className=\"icons-container\">\r\n        <div id=\"homeIconContainer\" className=\"icon-container\">\r\n          <a href=\"https://shir0206.github.io/ShirWeb/\">\r\n            <i id=\"home\" className=\"fa fa-home icon bar-icon\" />\r\n          </a>\r\n        </div>\r\n        <div id=\"contactIconContainer\" className=\"icon-container\">\r\n          <a href=\"mailto:shir0206@gmail.com\">\r\n            <i id=\"contact\" className=\"fa fa-envelope icon bar-icon\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-item.css\";\r\n\r\n/**\r\n * Card component\r\n * @param {Card currentCard} props\r\n */\r\nfunction Card(props) {\r\n  const currentCard = props.currentCard;\r\n\r\n  return (\r\n    <div id=\"cardContainer\" className=\"card-container card-border\">\r\n      <div className=\"card-image-container\">\r\n        <img\r\n          id=\"cardImage\"\r\n          className=\"card-image\"\r\n          alt={currentCard.title}\r\n          src={currentCard.imgURL}\r\n        />\r\n      </div>\r\n      <div className=\"overlay\">\r\n        <div id=\"cardTitleContainer\" className=\"items card-title-container\">\r\n          <p id=\"cardTitle\">{currentCard.title}</p>\r\n          <hr />\r\n        </div>\r\n        <div id=\"cardDateContainer\" className=\"items card-date-container\">\r\n          <p id=\"cardDate\">{currentCard.date}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const CardItem = props => {\r\n  //const [clickedCard, setClickedCard] = useState([]);\r\n\r\n  function updateCardDetailsOnClick(e) {\r\n    e.preventDefault();\r\n\r\n    let card = props.currentCard;\r\n    // setClickedCard(card);\r\n\r\n    props.handleClickedCard(card);\r\n  }\r\n\r\n  return (\r\n    <li onClick={updateCardDetailsOnClick}>\r\n      <Card currentCard={props.currentCard} />\r\n    </li>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./gallery.css\";\r\nimport firebase from \"../../Firebase/firebase\"\r\nimport { CardItem } from \"../CardItem/CardItem\";\r\n\r\nexport const Gallery = props => {\r\n  // State using for extractig cards data from DB\r\n  const [cardItemsData, setCardItemsData] = useState([]);\r\n\r\n  const [clickedCard, setClickedCard] = useState([]);\r\n\r\n  const recieveCardDetails = useCallback(\r\n    propsChild => {\r\n      let card = propsChild;\r\n      console.log(\"recieveCardDetails\", card);\r\n      setClickedCard(card);\r\n      props.handleGalleryClickedCard(card);\r\n    },\r\n    [] //[clickedCard]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      // DB Request, extract all the data from Firebase\r\n      firebase\r\n        .database()\r\n        .ref(\"Cards\")\r\n        .once(\"value\", querySnapShot => {\r\n          let data = querySnapShot.val() ? querySnapShot.val() : {};\r\n          let dataJSON = { ...data };\r\n\r\n          // Initialize the state with all the data recieved from DB\r\n          setCardItemsData(dataJSON);\r\n        });\r\n    },\r\n    [] // Occurs when the state within is changing (once)\r\n  );\r\n\r\n  let cardItemsList = createCardItemsList(\r\n    props.search,\r\n    cardItemsData,\r\n    recieveCardDetails\r\n  );\r\n\r\n  return (\r\n    <div id=\"galleryContainer\" className=\"gallery-container\">\r\n      <ul id=\"gallery\" className=\"gallery\">\r\n        {cardItemsList}\r\n      </ul>\r\n      <p id=\"cardsCounter\" className=\"cards-counter\">\r\n        {cardItemsList.length} items found\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Extract JSON recieved from DB {cardItemsData}\r\n * init new {CardItem} component for each JSON object, as props\r\n * @param {State} cardItemsData\r\n */\r\nfunction createCardItemsList(search, cardItemsData, recieveCardDetails) {\r\n  let values = Object.values(cardItemsData);\r\n  let list;\r\n\r\n  if (search) {\r\n    list = filterCards(values, search);\r\n  } else {\r\n    list = values;\r\n  }\r\n\r\n  let cardItemsList = list.map(i => (\r\n    <CardItem\r\n      currentCard={i}\r\n      key={i.id.toString()}\r\n      handleClickedCard={recieveCardDetails}\r\n    />\r\n  ));\r\n\r\n  return cardItemsList;\r\n}\r\n\r\n/**\r\n * Filter the cards according to the search text\r\n */\r\nfunction filterCards(values, search) {\r\n  let filtered = values.filter(i => {\r\n    // Filter card by the title\r\n    let titleFlag = i.title.toLowerCase().indexOf(search) !== -1;\r\n\r\n    // Filter card by the tags, if not filtered by the title\r\n    let tagsFlag = false;\r\n    if (!titleFlag && i.tags) {\r\n      i.tags.filter(tag => {\r\n        if (!tagsFlag) {\r\n          tagsFlag = tag.toLowerCase().indexOf(search) !== -1;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Return if the card chosen by the filtering\r\n    return titleFlag || tagsFlag;\r\n  });\r\n\r\n  return filtered;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\n// import \"./styles.css\";\r\nimport \"./floating-arrow.css\";\r\n\r\nexport const FloatingArrow = () => {\r\n  return (\r\n    <a href=\"#\">\r\n      <div className=\"arrow-container\">\r\n        <div className=\"round\">\r\n          <i className=\"fa fa-angle-up arrow\" />\r\n          <i className=\"fa fa-angle-up arrow bottom-arrow\" />\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./zoom-card-item.css\";\r\nimport firebase from \"../../Firebase/firebase\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\n\r\nexport const ZoomCardItem = (props) => {\r\n  const card = props.card;\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // Recieve search data from Search component, init search state\r\n  const recieveTagText = useCallback(\r\n    (childProps) => {\r\n      // Update searched text in the state\r\n      setSearch(childProps);\r\n\r\n      // Update the parent's props {handleNavSearch} with the search text\r\n      // (ArtGallery component - Search grandparent component)\r\n      props.handleTagSearch(childProps);\r\n    },\r\n    [] //search\r\n  );\r\n\r\n  const tagsList = createTagsList(card.tags, recieveTagText);\r\n\r\n  return (\r\n    <div className=\"zoom-wrapper\">\r\n      <div className=\"zoom-container\">\r\n        <ZoomImage card={card} />\r\n        <div id=\"detailsContainer\" className=\"details-container\">\r\n          <p id=\"title\" className=\"title\">\r\n            {card.title}\r\n          </p>\r\n          <hr />\r\n          <p id=\"description\">{card.description}</p>\r\n          <p id=\"date\" className=\"date\">\r\n            – {card.date}\r\n          </p>\r\n          <ul>{tagsList}</ul>\r\n          <div className=\"likes-container\">\r\n            <Like card={card} />\r\n            <Dislike card={card} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction createTagsList(tags, recieveTagText) {\r\n  let tagsList = tags.map((i) => (\r\n    <Tag currentTag={i} key={i} handleTagSearch={recieveTagText} />\r\n  ));\r\n  return tagsList;\r\n}\r\n\r\nfunction Tag(props) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [tag, setTag] = useState(props.currentTag.toString());\r\n\r\n  function updateSearch(event) {\r\n    event.preventDefault();\r\n\r\n    // Get the search text when occurs event 'onChange'\r\n    setSearch(tag);\r\n\r\n    // Update the parent's props {handleSearch} with the search text\r\n    props.handleTagSearch(tag);\r\n  }\r\n\r\n  return (\r\n    <li className=\"tag\" onClick={updateSearch}>\r\n      #{tag}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction ZoomImage(props) {\r\n  let card = props.card;\r\n  return (\r\n    <div id=\"imageContainer\" className=\"image-container\">\r\n      <TransformWrapper>\r\n        {({ zoomIn, zoomOut, resetTransform, ...rest }) => (\r\n          <React.Fragment>\r\n            <div className=\"image-wrapper\">\r\n              <TransformComponent>\r\n                <img\r\n                  id=\"image\"\r\n                  className=\"image\"\r\n                  src={card.imgURL}\r\n                  alt={card.title}\r\n                />\r\n              </TransformComponent>\r\n            </div>\r\n            <div className=\"tools\">\r\n              <button className=\"zoom-in-btn\" onClick={zoomIn}>\r\n                <i className=\"fas fa-search-plus zoom-in-icon\" />\r\n              </button>\r\n              <button className=\"zoom-out-btn\" onClick={zoomOut}>\r\n                <i className=\"fas fa-search-minus zoom-out-icon\" />\r\n              </button>\r\n              <button className=\"zoom-reset-btn\" onClick={resetTransform}>\r\n                <i className=\"fas fa-expand zoom-reset-icon\" />\r\n              </button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </TransformWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Like(props) {\r\n  let card = props.card;\r\n\r\n  const [likeClassName, setLikeClassName] = useState(false);\r\n  const [likeCounter, setLikeCounter] = useState(function () {\r\n    return parseInt(props.card.likes, 10);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLikeCounter(parseInt(props.card.likes, 10));\r\n  }, [props.card.likes]);\r\n\r\n  useEffect(() => {\r\n    setLikeCounter(parseInt(props.card.likes, 10));\r\n  }, [props]);\r\n\r\n\r\n  function updateLikeDB() {\r\n    var updates = {};\r\n    updates[\"/Cards/\" + card.id + \"/likes\"] = likeCounter + 1;\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .update(updates, function (error) {\r\n        if (error) {\r\n          return false;\r\n        } else {\r\n          // Data saved successfully, update the view of the likes counter\r\n          setLikeClassName(!likeClassName);\r\n          setLikeCounter(likeCounter + 1);\r\n          return true;\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"like-container\">\r\n      <i\r\n        className={\r\n          likeClassName\r\n            ? \"fa fa-heart like-icon like-icon-anim\"\r\n            : \"fa fa-heart like-icon \"\r\n        }\r\n        onClick={updateLikeDB}\r\n        onAnimationEnd={() => setLikeClassName(!likeClassName)}\r\n      />\r\n      <p id=\"likes\">{likeCounter}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Dislike(props) {\r\n  let card = props.card;\r\n\r\n  const [dislikeClassName, setDislikeClassName] = useState(false);\r\n  const [dislikeCounter, setDislikeCounter] = useState(function () {\r\n    return parseInt(props.card.likes, 10);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setDislikeCounter(parseInt(props.card.dislikes, 10));\r\n  }, [props.card.dislikes]);\r\n\r\n  useEffect(() => {\r\n    setDislikeCounter(parseInt(props.card.dislikes, 10));\r\n  }, [props]);\r\n\r\n  function updateDislikeDB() {\r\n    var updates = {};\r\n    updates[\"/Cards/\" + card.id + \"/dislikes\"] = dislikeCounter + 1;\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .update(updates, function (error) {\r\n        if (error) {\r\n          return false;\r\n        } else {\r\n          // Data saved successfully, update the view of the likes counter\r\n          setDislikeClassName(!dislikeClassName);\r\n          setDislikeCounter(dislikeCounter + 1);\r\n          return true;\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"dislike-container\">\r\n      <i\r\n        className={\r\n          dislikeClassName\r\n            ? \"fas fa-heart-broken dislike-icon dislike-icon-anim\"\r\n            : \"fas fa-heart-broken dislike-icon\"\r\n        }\r\n        onClick={updateDislikeDB}\r\n        onAnimationEnd={() => setDislikeClassName(!dislikeClassName)}\r\n      />\r\n      <p id=\"dislikes\" className=\"dislikes\">\r\n        {dislikeCounter}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport ScrollLock from \"react-scrolllock\";\r\nimport firebase from \"../Firebase/firebase\";\r\n\r\nimport { Nav } from \"./Nav/Nav\";\r\nimport { Gallery } from \"./Gallery/Gallery\";\r\nimport { FloatingArrow } from \"./FloatingArrow/FloatingArrow\";\r\nimport { ZoomCardItem } from \"./ZoomCardItem/ZoomCardItem\";\r\n\r\nimport \"./art-gallery.css\";\r\n\r\nexport const ArtGallery = props => {\r\n  const [lock, setLock] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [card, setCard] = useState([]);\r\n  const [wide, setWide] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.windowWidth < 501) {\r\n        console.log(\"narrow\");\r\n        setWide(false);\r\n      } else {\r\n        console.log(\"wide\");\r\n        setWide(true);\r\n      }\r\n    },\r\n    [props.windowWidth] // Occurs when the state within is changing\r\n  );\r\n\r\n  // Recieve search data from Nav component, init search state\r\n  const recieveNavSearchText = useCallback(\r\n    props => {\r\n      // Update searched text in the state\r\n      setSearch(props);\r\n    },\r\n    [] //search\r\n  );\r\n\r\n  const recieveTagSearchText = useCallback(\r\n    props => {\r\n      // Update searched text in the state\r\n\r\n      setLock(false);\r\n\r\n      setSearch(props.toLowerCase());\r\n    },\r\n    [] //search\r\n  );\r\n\r\n  const recieveCardDetails = useCallback(\r\n    propsChild => {\r\n      let cardId = propsChild.id;\r\n      console.log(\"from recieveCardDetails\", cardId);\r\n\r\n      recieveCardFromDB(cardId);\r\n    },\r\n    [] //card\r\n  );\r\n\r\n  function recieveCardFromDB(cardId) {\r\n    // DB Request, extract all the data from Firebase\r\n    firebase\r\n      .database()\r\n      .ref(\"/Cards/\" + cardId)\r\n      .once(\"value\", querySnapShot => {\r\n        let data = querySnapShot.val() ? querySnapShot.val() : {};\r\n        let card = { ...data };\r\n\r\n        // Initialize the state with the data recieved from DB\r\n        setCard(card);\r\n        setLock(true);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div id=\"ArtGallery\" className=\"wide-art-gallery\">\r\n      <div\r\n        className={\r\n          lock\r\n            ? wide\r\n              ? \"art-gallery-background avoid-clicks\"\r\n              : \"art-gallery-background avoid-clicks no-scroll\"\r\n            : \"\"\r\n        }\r\n      >\r\n        <Nav search={search} handleNavSearch={recieveNavSearchText} />\r\n        <Gallery\r\n          search={search}\r\n          handleGalleryClickedCard={recieveCardDetails}\r\n        />\r\n        {wide && lock && <ScrollLock />}\r\n      </div>\r\n\r\n      {card === undefined || card.length === 0 || !lock ? (\r\n        <FloatingArrow />\r\n      ) : (\r\n        <div className={wide ? \"zoom-card-wide\" : \"zoom-card-narrow\"}>\r\n          <i\r\n            className=\"fas fa-times exit-icon\"\r\n            onClick={() => setLock(false)}\r\n          />\r\n          <ZoomCardItem card={card} handleTagSearch={recieveTagSearchText} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./app.css\";\nimport { ArtGallery } from \"../ArtGallery/ArtGallery\";\n\nexport default function App() {\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <div className=\"App\">\n      <ArtGallery windowWidth={width} />\n    </div>\n  );\n}\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from \"./App/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}